// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VemDeZap.Infra.Repositories.Base;

namespace VemDeZap.Infra.Migrations
{
    [DbContext(typeof(VemDeZapContext))]
    [Migration("20200630200513_CriarTabela")]
    partial class CriarTabela
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("VemDeZap.Domain.Entidades.Campanha", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Campanhas");
                });

            modelBuilder.Entity("VemDeZap.Domain.Entidades.Contato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("IdUsuario")
                        .HasColumnType("uuid");

                    b.Property<int>("Nicho")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("VemDeZap.Domain.Entidades.Envio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CampanhaId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ContatoId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Enviado")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("GrupoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CampanhaId");

                    b.HasIndex("ContatoId");

                    b.HasIndex("GrupoId");

                    b.ToTable("Envios");
                });

            modelBuilder.Entity("VemDeZap.Domain.Entidades.Grupo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("IdUsuario")
                        .HasColumnType("uuid");

                    b.Property<int>("Nicho")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("VemDeZap.Domain.Entidades.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrimeiroNome")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("character varying(36)")
                        .HasMaxLength(36);

                    b.Property<string>("UltimoNome")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("VemDeZap.Domain.Entidades.Campanha", b =>
                {
                    b.HasOne("VemDeZap.Domain.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("VemDeZap.Domain.Entidades.Contato", b =>
                {
                    b.HasOne("VemDeZap.Domain.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario");
                });

            modelBuilder.Entity("VemDeZap.Domain.Entidades.Envio", b =>
                {
                    b.HasOne("VemDeZap.Domain.Entidades.Campanha", "Campanha")
                        .WithMany()
                        .HasForeignKey("CampanhaId");

                    b.HasOne("VemDeZap.Domain.Entidades.Contato", "Contato")
                        .WithMany()
                        .HasForeignKey("ContatoId");

                    b.HasOne("VemDeZap.Domain.Entidades.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoId");
                });

            modelBuilder.Entity("VemDeZap.Domain.Entidades.Grupo", b =>
                {
                    b.HasOne("VemDeZap.Domain.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
